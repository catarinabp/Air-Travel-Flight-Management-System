<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="da/db6/_graph_8h" kind="file" language="C++">
    <compoundname>Graph.h</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">queue</includes>
    <includes local="no">stack</includes>
    <includes local="no">list</includes>
    <includedby refid="d0/d76/extract_from_database_8h" local="yes">extractFromDatabase.h</includedby>
    <includedby refid="d9/d85/search_8h" local="yes">search.h</includedby>
    <includedby refid="d7/dc5/statistics_8h" local="yes">statistics.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>Graph.h</label>
        <link refid="da/db6/_graph_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstddef</label>
      </node>
      <node id="7">
        <label>list</label>
      </node>
      <node id="5">
        <label>queue</label>
      </node>
      <node id="6">
        <label>stack</label>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>Graph.h</label>
        <link refid="da/db6/_graph_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>extractFromDatabase.h</label>
        <link refid="d0/d76/extract_from_database_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>main.cpp</label>
        <link refid="df/d0a/main_8cpp"/>
      </node>
      <node id="5">
        <label>search.h</label>
        <link refid="d9/d85/search_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>statistics.h</label>
        <link refid="d7/dc5/statistics_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d0/d72/class_vertex" prot="public">Vertex</innerclass>
    <innerclass refid="d7/d77/class_edge" prot="public">Edge</innerclass>
    <innerclass refid="da/d9a/class_graph" prot="public">Graph</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PROJETO2AED_GRAPH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROJETO2AED_GRAPH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/d77/class_edge" kindref="compound">Edge</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d9a/class_graph" kindref="compound">Graph</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d72/class_vertex" kindref="compound">Vertex</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/>Provided<sp/>structures<sp/><sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="23" refid="d0/d72/class_vertex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d72/class_vertex" kindref="compound">Vertex</ref><sp/>{</highlight></codeline>
<codeline lineno="24" refid="d0/d72/class_vertex_1a415d7811eef6cdd992f0dca1f35a49cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="d0/d72/class_vertex_1a415d7811eef6cdd992f0dca1f35a49cd" kindref="member">info</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="d0/d72/class_vertex_1a5d9dfdd2caee11e300ff5142799345a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Edge&lt;T&gt;<sp/>&gt;<sp/><ref refid="d0/d72/class_vertex_1a5d9dfdd2caee11e300ff5142799345a1" kindref="member">adj</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>of<sp/>outgoing<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="d0/d72/class_vertex_1a187a2fe4ff50261cf3c15b8cda7dfc56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1a187a2fe4ff50261cf3c15b8cda7dfc56" kindref="member">visited</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auxiliary<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="d0/d72/class_vertex_1ae575d4b9a6b1ada3f9626c458c060f54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1ae575d4b9a6b1ada3f9626c458c060f54" kindref="member">processing</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auxiliary<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1a2877afde591d5cac1444d048151e585e" kindref="member">addEdge</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*dest,<sp/>std::string<sp/>w);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1ab2b5b43fb1709a901b78718436763a84" kindref="member">removeEdgeTo</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*d);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1a7f4e8e4773d667ed3e892538fa59f865" kindref="member">removeEdgeToByWeight</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;weight);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d72/class_vertex_1afcbdd4d4198b672356559cb8fa088408" kindref="member">Vertex</ref>(T<sp/>in);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="d0/d72/class_vertex_1a48eae2f7af2362634adab02b7b2dbec6" kindref="member">getInfo</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1a68c9c8792b2752b7540e2f8c14f686a4" kindref="member">setInfo</ref>(T<sp/>in);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1aa2bb17f6ebd98a67f8da1f689b22fadc" kindref="member">isVisited</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1aa1a1921cded8cb209382407b5a9433f3" kindref="member">setVisited</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1aaa41dfa4ce1a19b4e529cc6cdc23b764" kindref="member">isProcessing</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1ac7b2e53890abfbcd4d7ce3b7d34ee932" kindref="member">setProcessing</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>p);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;Edge&lt;T&gt;&gt;<sp/>&amp;<ref refid="d0/d72/class_vertex_1a0b0341340972782503ff5065f46673fe" kindref="member">getAdj</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41" refid="d0/d72/class_vertex_1aefa9b76cd57411c5354e5620dc2d84dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1aacc5763deca4f0f308756b69f9598584" kindref="member">setAdj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;<ref refid="d7/d77/class_edge" kindref="compound">Edge&lt;T&gt;</ref>&gt;<sp/>&amp;<ref refid="d0/d72/class_vertex_1a5d9dfdd2caee11e300ff5142799345a1" kindref="member">adj</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d9a/class_graph" kindref="compound">Graph</ref>&lt;T&gt;;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="49" refid="d7/d77/class_edge" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/d77/class_edge" kindref="compound">Edge</ref><sp/>{</highlight></codeline>
<codeline lineno="50" refid="d7/d77/class_edge_1ae4d65678b91bd9d814af4720ad87cd0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*<sp/><ref refid="d7/d77/class_edge_1ae4d65678b91bd9d814af4720ad87cd0c" kindref="member">dest</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="d7/d77/class_edge_1a7b1763bb85d4cc63d292752c2bbaf6d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="d7/d77/class_edge_1a7b1763bb85d4cc63d292752c2bbaf6d0" kindref="member">weight</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>edge<sp/>weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d77/class_edge_1a303637c9cbcac1005c164591956fed51" kindref="member">Edge</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*d,<sp/>std::string<sp/>w);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*<ref refid="d7/d77/class_edge_1a9a2de066dff8513dd788d553fc1d0c81" kindref="member">getDest</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/class_edge_1a163ee9f75e35701e6a04ea1c987e4094" kindref="member">setDest</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*<ref refid="d7/d77/class_edge_1ae4d65678b91bd9d814af4720ad87cd0c" kindref="member">dest</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="d7/d77/class_edge_1a685f283c31bf5553acca4eea34d19d15" kindref="member">getWeight</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57" refid="d7/d77/class_edge_1aefa9b76cd57411c5354e5620dc2d84dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/class_edge_1a43954e1d4b8c5bafaf39346cd689b39e" kindref="member">setWeight</ref>(std::string<sp/><ref refid="d7/d77/class_edge_1a7b1763bb85d4cc63d292752c2bbaf6d0" kindref="member">weight</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d9a/class_graph" kindref="compound">Graph</ref>&lt;T&gt;;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d72/class_vertex" kindref="compound">Vertex</ref>&lt;T&gt;;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="66" refid="da/d9a/class_graph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d9a/class_graph" kindref="compound">Graph</ref><sp/>{</highlight></codeline>
<codeline lineno="67" refid="da/d9a/class_graph_1a73d4e735fc0a7c83c9c689a2b53fa623" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Vertex&lt;T&gt;<sp/>*&gt;<sp/><ref refid="da/d9a/class_graph_1a73d4e735fc0a7c83c9c689a2b53fa623" kindref="member">vertexSet</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertex<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="da/d9a/class_graph_1a1e0cd13bd9e91a125a484a0817c030a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1a1e0cd13bd9e91a125a484a0817c030a1" kindref="member">_index_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auxiliary<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="da/d9a/class_graph_1a261998fc1e44c878c595c2b0a05680be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>stack&lt;Vertex&lt;T&gt;&gt;<sp/><ref refid="da/d9a/class_graph_1a261998fc1e44c878c595c2b0a05680be" kindref="member">_stack_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auxiliary<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="da/d9a/class_graph_1ab06fb542caac016248829c9e6fd11ec4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;list&lt;T&gt;&gt;<sp/><ref refid="da/d9a/class_graph_1ab06fb542caac016248829c9e6fd11ec4" kindref="member">_list_sccs_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auxiliary<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1ab2bb8011642e0d5e6a71e0981d661056" kindref="member">dfsVisit</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*v,<sp/><sp/>vector&lt;T&gt;<sp/>&amp;<sp/>res)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73" refid="da/d9a/class_graph_1a06743c0b3e219cfeefa5aade38556cb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1a06743c0b3e219cfeefa5aade38556cb7" kindref="member">dfsIsDAG</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*v)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*<ref refid="da/d9a/class_graph_1a8b7b7465fbfd562e2a469f90a437ab75" kindref="member">findVertex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;in)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1a0853eac15cdf0f06d63f4b8a7820ec71" kindref="member">getNumVertex</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1a00be284ea2be3b3d0f0d2e493b70245b" kindref="member">addVertex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;in);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1af9c903104ad69a7782979fa9caedf163" kindref="member">removeVertex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;in);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1a3a63892ebe746c36a837188857078171" kindref="member">addEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;sourc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;dest,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>w);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1a1106092a37366486cf55576f9ec01692" kindref="member">removeEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;sourc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;dest);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1ad9ef501254809330045c899c512d3a7c" kindref="member">removeEdgeByWeight</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;sourc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;weight);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Vertex&lt;T&gt;<sp/>*<sp/>&gt;<sp/><ref refid="da/d9a/class_graph_1a923b43995f81ad9319bbc81a1e433e64" kindref="member">getVertexSet</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;T&gt;<sp/><ref refid="da/d9a/class_graph_1a911798b1a89f8c4ae90ba3eee849cff8" kindref="member">dfs</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;T&gt;<sp/><ref refid="da/d9a/class_graph_1a911798b1a89f8c4ae90ba3eee849cff8" kindref="member">dfs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<sp/>source)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;T&gt;<sp/><ref refid="da/d9a/class_graph_1aa47a4130165550e208e7a063fce6983a" kindref="member">bfs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;source)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/>Provided<sp/>constructors<sp/>and<sp/>functions<sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="95" refid="d0/d72/class_vertex_1afcbdd4d4198b672356559cb8fa088408" refkind="member"><highlight class="normal"><ref refid="d0/d72/class_vertex_1afcbdd4d4198b672356559cb8fa088408" kindref="member">Vertex&lt;T&gt;::Vertex</ref>(T<sp/>in):<sp/>info(in)<sp/>{}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="103" refid="d7/d77/class_edge_1a303637c9cbcac1005c164591956fed51" refkind="member"><highlight class="normal"><ref refid="d7/d77/class_edge_1a303637c9cbcac1005c164591956fed51" kindref="member">Edge&lt;T&gt;::Edge</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*d,<sp/>std::string<sp/>w):<sp/>dest(d),<sp/>weight(std::move(w))<sp/>{}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="110" refid="da/d9a/class_graph_1a0853eac15cdf0f06d63f4b8a7820ec71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1a0853eac15cdf0f06d63f4b8a7820ec71" kindref="member">Graph&lt;T&gt;::getNumVertex</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vertexSet.size();</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="119" refid="da/d9a/class_graph_1a923b43995f81ad9319bbc81a1e433e64" refkind="member"><highlight class="normal">vector&lt;Vertex&lt;T&gt;<sp/>*<sp/>&gt;<sp/><ref refid="da/d9a/class_graph_1a923b43995f81ad9319bbc81a1e433e64" kindref="member">Graph&lt;T&gt;::getVertexSet</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vertexSet;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="128" refid="d0/d72/class_vertex_1a48eae2f7af2362634adab02b7b2dbec6" refkind="member"><highlight class="normal">T<sp/><ref refid="d0/d72/class_vertex_1a48eae2f7af2362634adab02b7b2dbec6" kindref="member">Vertex&lt;T&gt;::getInfo</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="137" refid="d0/d72/class_vertex_1a68c9c8792b2752b7540e2f8c14f686a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1a68c9c8792b2752b7540e2f8c14f686a4" kindref="member">Vertex&lt;T&gt;::setInfo</ref>(T<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d72/class_vertex_1a415d7811eef6cdd992f0dca1f35a49cd" kindref="member">Vertex::info</ref><sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="146" refid="d0/d72/class_vertex_1aaa41dfa4ce1a19b4e529cc6cdc23b764" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1aaa41dfa4ce1a19b4e529cc6cdc23b764" kindref="member">Vertex&lt;T&gt;::isProcessing</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>processing;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="155" refid="d0/d72/class_vertex_1ac7b2e53890abfbcd4d7ce3b7d34ee932" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1ac7b2e53890abfbcd4d7ce3b7d34ee932" kindref="member">Vertex&lt;T&gt;::setProcessing</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d72/class_vertex_1ae575d4b9a6b1ada3f9626c458c060f54" kindref="member">Vertex::processing</ref><sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="164" refid="d7/d77/class_edge_1a9a2de066dff8513dd788d553fc1d0c81" refkind="member"><highlight class="normal"><ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*<ref refid="d7/d77/class_edge_1a9a2de066dff8513dd788d553fc1d0c81" kindref="member">Edge&lt;T&gt;::getDest</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dest;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="173" refid="d7/d77/class_edge_1a163ee9f75e35701e6a04ea1c987e4094" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/class_edge_1a163ee9f75e35701e6a04ea1c987e4094" kindref="member">Edge&lt;T&gt;::setDest</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d77/class_edge_1ae4d65678b91bd9d814af4720ad87cd0c" kindref="member">Edge::dest</ref><sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="182" refid="d7/d77/class_edge_1a685f283c31bf5553acca4eea34d19d15" refkind="member"><highlight class="normal">std::string<sp/><ref refid="d7/d77/class_edge_1a685f283c31bf5553acca4eea34d19d15" kindref="member">Edge&lt;T&gt;::getWeight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>weight;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="191" refid="d7/d77/class_edge_1a43954e1d4b8c5bafaf39346cd689b39e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d7/d77/class_edge_1a43954e1d4b8c5bafaf39346cd689b39e" kindref="member">Edge&lt;T&gt;::setWeight</ref>(std::string<sp/>weight)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d77/class_edge_1a7b1763bb85d4cc63d292752c2bbaf6d0" kindref="member">Edge::weight</ref><sp/>=<sp/>weight;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>Auxiliary<sp/>function<sp/>to<sp/>find<sp/>a<sp/>vertex<sp/>with<sp/>a<sp/>given<sp/>content.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="199" refid="da/d9a/class_graph_1a8b7b7465fbfd562e2a469f90a437ab75" refkind="member"><highlight class="normal"><ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*<sp/><ref refid="da/d9a/class_graph_1a8b7b7465fbfd562e2a469f90a437ab75" kindref="member">Graph&lt;T&gt;::findVertex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;in)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>:<sp/>vertexSet)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v-&gt;info<sp/>==<sp/>in)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="211" refid="d0/d72/class_vertex_1aa2bb17f6ebd98a67f8da1f689b22fadc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1aa2bb17f6ebd98a67f8da1f689b22fadc" kindref="member">Vertex&lt;T&gt;::isVisited</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visited;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="220" refid="d0/d72/class_vertex_1aa1a1921cded8cb209382407b5a9433f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1aa1a1921cded8cb209382407b5a9433f3" kindref="member">Vertex&lt;T&gt;::setVisited</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d72/class_vertex_1a187a2fe4ff50261cf3c15b8cda7dfc56" kindref="member">Vertex::visited</ref><sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="229" refid="d0/d72/class_vertex_1a0b0341340972782503ff5065f46673fe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;Edge&lt;T&gt;&gt;<sp/>&amp;<ref refid="d0/d72/class_vertex_1a0b0341340972782503ff5065f46673fe" kindref="member">Vertex&lt;T&gt;::getAdj</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>adj;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="238" refid="d0/d72/class_vertex_1aacc5763deca4f0f308756b69f9598584" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1aacc5763deca4f0f308756b69f9598584" kindref="member">Vertex&lt;T&gt;::setAdj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;<ref refid="d7/d77/class_edge" kindref="compound">Edge&lt;T&gt;</ref>&gt;<sp/>&amp;adj)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d72/class_vertex_1a5d9dfdd2caee11e300ff5142799345a1" kindref="member">Vertex::adj</ref><sp/>=<sp/>adj;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/><sp/>Adds<sp/>a<sp/>vertex<sp/>with<sp/>a<sp/>given<sp/>content<sp/>or<sp/>info<sp/>(in)<sp/>to<sp/>a<sp/>graph<sp/>(this).</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/><sp/>Returns<sp/>true<sp/>if<sp/>successful,<sp/>and<sp/>false<sp/>if<sp/>a<sp/>vertex<sp/>with<sp/>that<sp/>content<sp/>already<sp/>exists.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="247" refid="da/d9a/class_graph_1a00be284ea2be3b3d0f0d2e493b70245b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1a00be284ea2be3b3d0f0d2e493b70245b" kindref="member">Graph&lt;T&gt;::addVertex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;in)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>findVertex(in)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexSet.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref>(in));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/>Adds<sp/>an<sp/>edge<sp/>to<sp/>a<sp/>graph<sp/>(this),<sp/>given<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>source<sp/>and</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/>destination<sp/>vertices<sp/>and<sp/>the<sp/>edge<sp/>weight<sp/>(w).</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>Returns<sp/>true<sp/>if<sp/>successful,<sp/>and<sp/>false<sp/>if<sp/>the<sp/>source<sp/>or<sp/>destination<sp/>vertex<sp/>does<sp/>not<sp/>exist.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="260" refid="da/d9a/class_graph_1a3a63892ebe746c36a837188857078171" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1a3a63892ebe746c36a837188857078171" kindref="member">Graph&lt;T&gt;::addEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;sourc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;dest,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/>findVertex(sourc);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v2<sp/>=<sp/>findVertex(dest);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v1<sp/>==<sp/>NULL<sp/>||<sp/>v2<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>v1-&gt;addEdge(v2,w);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>Auxiliary<sp/>function<sp/>to<sp/>add<sp/>an<sp/>outgoing<sp/>edge<sp/>to<sp/>a<sp/>vertex<sp/>(this),</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>with<sp/>a<sp/>given<sp/>destination<sp/>vertex<sp/>(d)<sp/>and<sp/>edge<sp/>weight<sp/>(w).</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="274" refid="d0/d72/class_vertex_1a2877afde591d5cac1444d048151e585e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1a2877afde591d5cac1444d048151e585e" kindref="member">Vertex&lt;T&gt;::addEdge</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*d,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>adj.push_back(<ref refid="d7/d77/class_edge" kindref="compound">Edge&lt;T&gt;</ref>(d,<sp/>w));</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*<sp/>Removes<sp/>an<sp/>edge<sp/>from<sp/>a<sp/>graph<sp/>(this).</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>The<sp/>edge<sp/>is<sp/>identified<sp/>by<sp/>the<sp/>source<sp/>(sourc)<sp/>and<sp/>destination<sp/>(dest)<sp/>contents.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>Returns<sp/>true<sp/>if<sp/>successful,<sp/>and<sp/>false<sp/>if<sp/>such<sp/>edge<sp/>does<sp/>not<sp/>exist.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="284" refid="da/d9a/class_graph_1a1106092a37366486cf55576f9ec01692" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1a1106092a37366486cf55576f9ec01692" kindref="member">Graph&lt;T&gt;::removeEdge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;sourc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;dest)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/>findVertex(sourc);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v2<sp/>=<sp/>findVertex(dest);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v1<sp/>==<sp/>NULL<sp/>||<sp/>v2<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v1-&gt;removeEdgeTo(v2);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>Auxiliary<sp/>function<sp/>to<sp/>remove<sp/>an<sp/>outgoing<sp/>edge<sp/>(with<sp/>a<sp/>given<sp/>destination<sp/>(d))</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>from<sp/>a<sp/>vertex<sp/>(this).</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>Returns<sp/>true<sp/>if<sp/>successful,<sp/>and<sp/>false<sp/>if<sp/>such<sp/>edge<sp/>does<sp/>not<sp/>exist.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="298" refid="d0/d72/class_vertex_1ab2b5b43fb1709a901b78718436763a84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1ab2b5b43fb1709a901b78718436763a84" kindref="member">Vertex&lt;T&gt;::removeEdgeTo</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newEnd<sp/>=<sp/>remove_if(adj.begin(),<sp/>adj.end(),</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[d](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d77/class_edge" kindref="compound">Edge&lt;T&gt;</ref>&amp;<sp/>edge)<sp/>{<sp/>return<sp/>edge.dest<sp/>==<sp/>d;<sp/>});</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removed<sp/>=<sp/>(newEnd<sp/>!=<sp/>adj.end());</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Erase<sp/>the<sp/>elements<sp/>marked<sp/>for<sp/>removal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>adj.erase(newEnd,<sp/>adj.end());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>removed;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="320" refid="da/d9a/class_graph_1ad9ef501254809330045c899c512d3a7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1ad9ef501254809330045c899c512d3a7c" kindref="member">Graph&lt;T&gt;::removeEdgeByWeight</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;sourc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;weight)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/>findVertex(sourc);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v2<sp/>=<sp/>findVertex(dest);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v1<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>v2<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v1-&gt;removeEdgeToByWeight(v2,<sp/>weight);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="336" refid="d0/d72/class_vertex_1a7f4e8e4773d667ed3e892538fa59f865" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d72/class_vertex_1a7f4e8e4773d667ed3e892538fa59f865" kindref="member">Vertex&lt;T&gt;::removeEdgeToByWeight</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;weight)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newEnd<sp/>=<sp/>remove_if(adj.begin(),<sp/>adj.end(),</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[d,<sp/>weight](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/d77/class_edge" kindref="compound">Edge&lt;T&gt;</ref>&amp;<sp/>edge)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>edge.dest<sp/>==<sp/>d<sp/>&amp;&amp;<sp/>edge.weight<sp/>==<sp/>weight;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removed<sp/>=<sp/>(newEnd<sp/>!=<sp/>adj.end());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Erase<sp/>the<sp/>elements<sp/>marked<sp/>for<sp/>removal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>adj.erase(newEnd);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>removed;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="361" refid="da/d9a/class_graph_1af9c903104ad69a7782979fa9caedf163" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1af9c903104ad69a7782979fa9caedf163" kindref="member">Graph&lt;T&gt;::removeVertex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;in)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>findVertex(in);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>u<sp/>:<sp/>vertexSet)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u-&gt;removeEdgeTo(v);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>vertexSet.begin();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>vertexSet.end())<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it<sp/>==<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>vertexSet.erase(it);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/>DFS<sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="393" refid="da/d9a/class_graph_1a911798b1a89f8c4ae90ba3eee849cff8" refkind="member"><highlight class="normal">vector&lt;T&gt;<sp/><ref refid="da/d9a/class_graph_1a911798b1a89f8c4ae90ba3eee849cff8" kindref="member">Graph&lt;T&gt;::dfs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;T&gt;<sp/>res;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>:<sp/>vertexSet)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;visited<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>:<sp/>vertexSet)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!v-&gt;visited)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dfsVisit(v,<sp/>res);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="412" refid="da/d9a/class_graph_1ab2bb8011642e0d5e6a71e0981d661056" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/d9a/class_graph_1ab2bb8011642e0d5e6a71e0981d661056" kindref="member">Graph&lt;T&gt;::dfsVisit</ref>(<ref refid="d0/d72/class_vertex" kindref="compound">Vertex&lt;T&gt;</ref><sp/>*v,<sp/>vector&lt;T&gt;<sp/>&amp;res)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;<ref refid="d0/d72/class_vertex_1a187a2fe4ff50261cf3c15b8cda7dfc56" kindref="member">visited</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>res.push_back(v-&gt;<ref refid="d0/d72/class_vertex_1a415d7811eef6cdd992f0dca1f35a49cd" kindref="member">info</ref>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;e<sp/>:<sp/>v-&gt;<ref refid="d0/d72/class_vertex_1a5d9dfdd2caee11e300ff5142799345a1" kindref="member">adj</ref>)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>e.dest;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!w-&gt;visited)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dfsVisit(w,<sp/>res);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/>DFS<sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="434" refid="da/d9a/class_graph_1a510522c8221b321a82e687fe2f2cb484" refkind="member"><highlight class="normal">vector&lt;T&gt;<sp/><ref refid="da/d9a/class_graph_1a911798b1a89f8c4ae90ba3eee849cff8" kindref="member">Graph&lt;T&gt;::dfs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;source)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;T&gt;<sp/>res;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>findVertex(source);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>:<sp/>vertexSet)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;visited<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>dfsVisit(s,<sp/>res);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/>BFS<sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="459" refid="da/d9a/class_graph_1aa47a4130165550e208e7a063fce6983a" refkind="member"><highlight class="normal">vector&lt;T&gt;<sp/><ref refid="da/d9a/class_graph_1aa47a4130165550e208e7a063fce6983a" kindref="member">Graph&lt;T&gt;::bfs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;source)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;T&gt;<sp/>res;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>findVertex(source);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>queue&lt;Vertex&lt;T&gt;<sp/>*&gt;<sp/>q;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>:<sp/>vertexSet)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;visited<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>q.push(s);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;visited<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!q.empty())<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>q.front();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.pop();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(v-&gt;info);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;e<sp/>:<sp/>v-&gt;adj)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>e.dest;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!w-&gt;visited)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.push(w);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w-&gt;visited<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//PROJETO2AED_GRAPH_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Graph.h"/>
  </compounddef>
</doxygen>
